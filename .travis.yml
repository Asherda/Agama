# errata:
# - A travis bug causes caches to trample eachother when using the same
#   compiler key (which we don't use anyway). This is worked around for now by
#   replacing the "compilers" with a build name prefixed by the no-op ":"
#   command. See: https://github.com/travis-ci/travis-ci/issues/4393
# - sudo/dist/group are set so as to get Blue Box VMs, necessary for [loopback]
#   IPv6 support

sudo: required
os: linux
dist: xenial
language: node_js
node_js:
  - "lts/*"

env:
  global:
    -BUILD_VERSION=0.04

cache:
  apt: true
  directories:
  - $HOME/google-cloud-sdk/

matrix:
  fast_finish: true
  include:
    - compiler: ": Linux"
      env: >
        BUILD_ICONS=assets/icons/agama_icons/128x128.png
        IGNORE_OS_ASSETS_1=assets/bin/osx
        IGNORE_OS_ASSETS_2=assets/bin/win64
        TARGET_PLATFORM=linux
    - compiler: ": Windows"
      env: >
        BUILD_ICONS=assets/icons/agama_icons/agama_app_icon.ico
        IGNORE_OS_ASSETS_1=assets/bin/osx
        IGNORE_OS_ASSETS_2=assets/bin/linux64
        TARGET_PLATFORM=win32

before-install:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  # Add gcloud to $PATH
  - source /home/travis/google-cloud-sdk/path.bash.inc

install:
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi
  - if [ $TRAVIS_OS_NAME = linux ]; then travis_retry sudo apt-get -y update && sudo apt-get -y install -qq $PACKAGES; fi

  #- if [ $TRAVIS_OS_NAME = osx ]; then brew upgrade python coreutils automake; fi
  #- if [ $TRAVIS_OS_NAME = osx ]; then travis_retry brew tap discoteq/discoteq && brew install flock; fi
  #- if [ $TRAVIS_OS_NAME = osx ]; then rm '/usr/local/include/c++' && travis_retry brew tap homebrew/homebrew-core && brew install homebrew/homebrew-core/gcc@5 --overwrite gcc@5; fi
  #- if [ $TRAVIS_OS_NAME = osx ]; then travis_retry brew update && brew install $PACKAGES; fi

before_script:
    - echo $GCLOUD_KEY > ./GC-Auth.json
    - gcloud auth activate-service-account --key-file GC-Auth.json

script:
    - cd agama && ./binary_artifacts.sh || true
    - sudo yarn add electron-packager -g && yarn add electron -g --unsafe-perm=true
    - cd gui/EasyDEX-GUI && yarn install && yarn add webpack webpack-dashboard
    - cd react && yarn install && yarn run build
    - cd ../../.. && yarn add webpack
    - cd .. && cp -r $KOMODO_EXEC_SET agama/assets/bin/$ASSET_PLATFORM
    - cd agama && yarn install
    - electron-packager . --platform=$TARGET_PLATFORM --arch=x64 --icon=$BUILD_ICONS --out=build/ --buildVersion=$BUILD_VERSION --ignore=$IGNORE_OS_ASSETS_1 --ignore=$IGNORE_OS_ASSETS_2 --overwrite; fi
    - if [ $BSCRIPT = build.sh ]; then cd build && tar -czf $COMPRESSED_ARCHIVE_NAME Agama-linux-x64; fi
    - if [ $BSCRIPT = build-win.sh ]; then cd build && zip -r -q -T -m $COMPRESSED_ARCHIVE_NAME Agama-win32-x64; fi
    - gsutil cp $COMPRESSED_ARCHIVE_NAME gs://veruscoin/auto/$ASSET_PLATFORM/

after_script:
- echo "Done!!!"

